"""
Functions for summing and converting ppbC to ppbV
"""

import pandas as pd

carbon_atoms_dict = {
    "1,2,3-Trimethylbenzene": 9,
    "1,2,4-Trimethylbenzene": 9,
    "1,3,5-Trimethylbenzene": 9,
    "1,3-Butadiene": 4,
    "1-Butene": 4,
    "1-Dodecene": 12,
    "1-Heptene": 7,
    "1-Hexene": 6,
    "1-Nonene": 9,
    "1-Octene": 8,
    "1-Pentene": 5,
    "1-Tridecene": 13,
    "1-Undecene": 11,
    "2,2,3-Trimethylpentane": 8,
    "2,2,4-Trimethylpentane": 8,
    "2,2-Dimethylbutane": 6,
    "2,3,4-Trimethylpentane": 8,
    "2,3-Dimethylbutane": 6,
    "2,3-Dimethylpentane": 7,
    "2,4-Dimethylpentane": 7,
    "2-Ethyl-1-butene": 6,
    "2-Methyl-1-butene": 5,
    "2-Methyl-1-pentene": 6,
    "2-Methyl-2-butene": 5,
    "2-Methylheptane": 8,
    "2-Methylhexane": 7,
    "2-Methylpentane": 6,
    "3-Methyl-1-butene": 5,
    "3-Methylheptane": 8,
    "3-Methylhexane": 7,
    "3-Methylpentane": 6,
    "4-Methyl-1-pentene": 6,
    "Acetylene": 2,
    "alpha-pinene": 10,
    "Benzene": 6,
    "beta-pinene": 10,
    "cis-2-Butene": 4,
    "cis-2-Hexene": 6,
    "cis-2-Pentene": 5,
    "Cyclohexane": 6,
    "Cyclopentane": 5,
    "Cyclopentene": 5,
    "Ethane": 2,
    "Ethylbenzene": 8,
    "Ethylene": 2,
    "Isobutane": 4,
    "Isobutylene": 4,
    "Isopentane": 5,
    "Isoprene": 5,
    "Isopropylbenzene": 9,
    "m-Diethylbenzene": 10,
    "Methylcyclohexane": 7,
    "Methylcyclopentane": 6,
    "m-Ethyltoluene": 9,
    "Xylene": 8,
    "n-Butane": 4,
    "n-Decane": 10,
    "n-Dodecane": 12,
    "n-Heptane": 7,
    "n-Hexane": 6,
    "n-Nonane": 9,
    "n-Octane": 8,
    "n-Pentane": 5,
    "n-Propylbenzene": 9,
    "n-Tridecane": 13,
    "n-Undecane": 11,
    "o-Ethyltoluene": 9,
    "p-Diethylbenzene": 10,
    "p-Ethyltoluene": 9,
    "Propane": 3,
    "Propylene": 3,
    "Propyne": 3,
    "Styrene": 8,
    "Toluene": 7,
    "trans-2-Butene": 4,
    "trans-2-Hexene": 6,
    "trans-2-Pentene": 5,
    "2-Butanone": 4,
    "Acetaldehyde": 2,
    "Acetone": 3,
    "Benzaldehyde": 7,
    "Butyraldehyde": 4,
    "Crotonaldehyde": 4,
    "Formaldehyde": 1,
    "Hexaldehyde": 6,
    "Propionaldehyde": 3,
    "Valeraldehyde": 5,
    "Methane": 2
}

sum_compounds_list = [
    "1,2,3-Trimethylbenzene",
    "1,2,4-Trimethylbenzene",
    "1,3,5-Trimethylbenzene",
    "1,3-Butadiene",
    "1-Butene",
    "1-Dodecene",
    "1-Heptene",
    "1-Hexene",
    "1-Nonene",
    "1-Octene",
    "1-Pentene",
    "1-Tridecene",
    "1-Undecene",
    "2,2,3-Trimethylpentane",
    "2,2,4-Trimethylpentane",
    "2,3,4-Trimethylpentane",
    "2,3-Dimethylbutane",
    "2,3-Dimethylpentane",
    "2,4-Dimethylpentane",
    "2-Ethyl-1-butene",
    "2-Methyl-1-butene",
    "2-Methyl-1-pentene",
    "2-Methyl-2-butene",
    "2-Methylheptane",
    "2-Methylhexane",
    "2-Methylpentane",
    "3-Methyl-1-butene",
    "3-Methylheptane",
    "3-Methylhexane",
    "3-Methylpentane",
    "4-Methyl-1-pentene",
    "Acetylene",
    "alpha-pinene",
    "Benzene",
    "beta-pinene",
    "cis-2-Butene",
    "cis-2-Hexene",
    "cis-2-Pentene",
    "Cyclohexane",
    "Cyclopentane",
    "Cyclopentene",
    "Ethane",
    "Ethylbenzene",
    "Ethylene",
    "Isobutane",
    "Isobutylene",
    "Isopentane",
    "Isoprene",
    "Isopropylbenzene",
    "m-Diethylbenzene",
    "Methylcyclohexane",
    "Methylcyclopentane",
    "m-Ethyltoluene",
    "Xylene",
    "n-Butane",
    "n-Decane",
    "n-Dodecane",
    "n-Heptane",
    "n-Hexane",
    "n-Nonane",
    "n-Octane",
    "n-Pentane",
    "n-Propylbenzene",
    "n-Tridecane",
    "n-Undecane",
    "o-Ethyltoluene",
    "p-Diethylbenzene",
    "p-Ethyltoluene",
    "Propane",
    "Propylene",
    "Propyne",
    "Styrene",
    "Toluene",
    "trans-2-Butene",
    "trans-2-Hexene",
    "trans-2-Pentene",
    "2-Butanone",
    "Acetaldehyde",
    "Acetone",
    "Benzaldehyde",
    "Butyraldehyde",
    "Crotonaldehyde",
    "Formaldehyde",
    "Hexaldehyde",
    "Propionaldehyde",
    "Valeraldehyde",
    "Methane"
]

btex_compounds = ['Benzene', 'Toluene', 'Ethylbenzene', 'Xylene']
def convert_to_ppb(df):
    """
    Convers the sum_compounds from ppbC to ppbV and sums compounds
    
    Returns a new df with only the compounds that should be summed in units of ppbV
    """

    sum_df = pd.DataFrame(columns=['Year'] + sum_compounds_list)
    sum_df['Year'] = df['Year']

    for compound in sum_compounds_list:
        try:
            sum_df[compound] = df[compound] / carbon_atoms_dict[compound]
        except:
            print(f'missing {compound}')
    
    sum_df['summed'] = sum_df[sum_compounds_list].sum(axis=1, skipna=True)

    sum_df['BTEX'] = sum_df[btex_compounds].sum(axis=1, skipna=True)
    
    return sum_df


    